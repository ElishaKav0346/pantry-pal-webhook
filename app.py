import gradio as gr
from transformers import pipeline

# Load a lightweight model using pipeline (faster and RAM-friendly)
generator = pipeline("text2text-generation", model="google/flan-t5-base")

# Prompt template
def generate_recipe(ingredients):
    prompt = f"""
You are Pantry-Pal-Bot, an expert home cook.

Create a realistic and tasty recipe using ONLY these ingredients: {ingredients}

Your response must include:
- Dish name
- Prep & cook time
- Cooking temperature
- Tools needed
- Step-by-step instructions

Add a cooking tip if you'd like.

Be creative, natural, and don’t repeat ingredients.

Now write the recipe:
"""

    response = generator(prompt, max_length=512, do_sample=True, temperature=0.7)[0]['generated_text']

    # Add disclaimer
    disclaimer = "\n\n⚠️ This recipe was generated by AI. Please use your own judgment when cooking and handling food."
    return response.strip() + disclaimer

# Gradio UI
with gr.Blocks() as demo:
    gr.Markdown("## 🥫 Pantry-Pal-Bot: AI Recipe Generator")
    gr.Markdown("Enter your ingredients (comma-separated) and get a full recipe!")

    with gr.Row():
        ingredients_input = gr.Textbox(label="Ingredients", placeholder="e.g. eggs, cheese, tomato")
        generate_button = gr.Button("Generate Recipe")

    output = gr.Textbox(label="Your AI-Generated Recipe", lines=15)

    generate_button.click(fn=generate_recipe, inputs=ingredients_input, outputs=output)

    gr.Markdown("👨‍🍳 Powered by `flan-t5-base` | Feedback? Share it with us!")

demo.launch()
