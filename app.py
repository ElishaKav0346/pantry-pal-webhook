import gradio as gr
from transformers import AutoModelForSeq2SeqLM, AutoTokenizer
import torch

# Load model
model_name = "google/flan-t5-base"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSeq2SeqLM.from_pretrained(model_name)
device = torch.device("cpu")

# Define generation settings for speed
generation_args = {
    "max_new_tokens": 150,
    "temperature": 0.7,
    "top_k": 50,
    "top_p": 0.95,
    "do_sample": True
}

# Define the prompt template
def build_prompt(ingredients):
    return f"""You are Pantry-Pal-Bot, an expert home cook.
Create a realistic and tasty recipe using ONLY these ingredients: {ingredients}

Your response must include:
- Dish name
- Prep & cook time
- Cooking temperature
- Tools needed
- Step-by-step instructions

Don't add ingredients that weren't listed unless you clearly say they are optional.
Finish with this line at the bottom:
⚠️ This recipe was generated by AI. Please use your own judgment when preparing and consuming food."""

# Generate the recipe
def generate_recipe(ingredients):
    prompt = build_prompt(ingredients)
    input_ids = tokenizer(prompt, return_tensors="pt").input_ids.to(device)
    output_ids = model.generate(input_ids, **generation_args)
    response = tokenizer.decode(output_ids[0], skip_special_tokens=True)
    return response

# UI
with gr.Blocks() as demo:
    gr.Markdown("# 🍳 Pantry-Pal-Bot")
    gr.Markdown("Enter your ingredients and Pantry-Pal-Bot will create a recipe for you!")

    with gr.Row():
        input_box = gr.Textbox(label="Your Ingredients", placeholder="e.g. eggs, cheese, spinach")
    
    with gr.Row():
        output_box = gr.Textbox(label="Generated Recipe", lines=20)
    
    with gr.Row():
        gen_btn = gr.Button("Generate Recipe 🍳")
        regen_btn = gr.Button("Regenerate 🔁")
        copy_btn = gr.Button("Copy to Clipboard 📋")

    def update_output(ingredients):
        return generate_recipe(ingredients)

    gen_btn.click(fn=update_output, inputs=[input_box], outputs=[output_box])
    regen_btn.click(fn=update_output, inputs=[input_box], outputs=[output_box])
    copy_btn.click(fn=None, inputs=[], outputs=[], js="() => navigator.clipboard.writeText(document.querySelector('textarea[aria-label=\"Generated Recipe\"]').value)")

demo.launch()
