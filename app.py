import gradio as gr
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, pipeline

# Load super-light and instruction-ready model
tokenizer = AutoTokenizer.from_pretrained("google/flan-t5-small")
model = AutoModelForSeq2SeqLM.from_pretrained("google/flan-t5-small")
generator = pipeline("text2text-generation", model=model, tokenizer=tokenizer)

def generate_recipe(ingredients):
    prompt = f"""
You are Pantry‚ÄëPal‚ÄëBot, a friendly home chef.
Create a realistic recipe using ONLY these ingredients: {ingredients}

Your recipe should include:
‚Ä¢ Dish name
‚Ä¢ Prep & cook time
‚Ä¢ Cooking temperature (if applicable)
‚Ä¢ Tools needed
‚Ä¢ Clear, numbered steps using all ingredients listed
‚Ä¢ Optional tip at the end

Avoid repeating ingredients or adding extras unless as an optional tip.
Now write the recipe:
"""
    response = generator(
        prompt,
        max_length=200,
        do_sample=True,
        temperature=0.8,
        top_p=0.95
    )[0]["generated_text"].strip()

    disclaimer = "\n\n‚ö†Ô∏è *This recipe was generated by AI. Please use your best judgment when cooking.*"
    return response + disclaimer

with gr.Blocks() as demo:
    gr.Markdown("## ü•´ Pantry-Pal-Bot ‚Äì AI Recipe Assistant")
    gr.Markdown("Enter your ingredients (comma-separated) and get a custom recipe!")

    with gr.Row():
        inp = gr.Textbox(label="Ingredients", placeholder="e.g., eggs, cheese, tomato")
        btn = gr.Button("üç≥ Generate")
    out = gr.Textbox(label="Your Recipe", lines=15)

    btn.click(generate_recipe, inputs=inp, outputs=out)

demo.launch()
