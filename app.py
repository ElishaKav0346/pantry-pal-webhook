import gradio as gr
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, pipeline

# Use ultra-light model for free Render tier
model_name = "google/flan-t5-small"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSeq2SeqLM.from_pretrained(model_name)

pipe = pipeline("text2text-generation", model=model, tokenizer=tokenizer)

def generate_recipe(ingredients):
    prompt = f"""
You are Pantry-Pal-Bot, an expert home cook.

Create a realistic and tasty recipe using ONLY these ingredients: {ingredients}

Your response must include:
- Dish name
- Prep & cook time
- Cooking temperature
- Tools needed
- Step-by-step instructions

Optional: a cooking tip at the end.

Be natural. Don‚Äôt repeat ingredients. Only mention extra ingredients as optional.

Now write the recipe:
"""
    result = pipe(prompt, max_length=512, do_sample=True, temperature=0.7)[0]['generated_text']
    disclaimer = "\n\n‚ö†Ô∏è This recipe was generated by AI. Please use your own judgment when cooking and handling food."
    return result.strip() + disclaimer

with gr.Blocks() as demo:
    gr.Markdown("## üç≥ Pantry-Pal-Bot: AI Recipe Generator")
    with gr.Row():
        inp = gr.Textbox(label="Enter ingredients", placeholder="e.g. eggs, cheese, tomato")
        btn = gr.Button("Generate")
    out = gr.Textbox(label="Recipe", lines=15)
    btn.click(generate_recipe, inputs=inp, outputs=out)
    gr.Markdown("‚ö†Ô∏è AI-generated recipes may not always be accurate or safe. Use your best judgment.")

demo.launch(server_name="0.0.0.0", server_port=8080)
